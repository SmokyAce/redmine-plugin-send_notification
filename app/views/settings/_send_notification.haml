- defaults = Redmine::Plugin::registered_plugins[:send_notification].settings[:default]
- settings =  Setting.plugin_send_notification || {}
- @settings = settings || defaults

%h3
  =t('label_status_settings')
%p
  - current_filter = @settings.fetch('issue_status_confirmed_id', 0)
  %label{for: 'settings_issue_status_confirmed_id]'}= t('label_issue_status_confirmed')
  = select_tag 'settings[issue_status_confirmed_id]', options_from_collection_for_select(IssueStatus.sorted.to_a, 'id', 'name', current_filter)
%p
  - current_filter = @settings.fetch('issue_status_completed_id', 0)
  %label{for: 'settings_issue_status_completed_id'}= t('label_issue_status_completed')
  = select_tag 'settings[issue_status_completed_id]', options_from_collection_for_select(IssueStatus.sorted.to_a, 'id', 'name', current_filter)
%p
  - current_filter = @settings.fetch('issue_status_in_work_id', 0)
  %label{for: 'settings_issue_status_in_work_id'}= t('label_issue_status_in_work')
  = select_tag 'settings[issue_status_in_work_id]', options_from_collection_for_select(IssueStatus.sorted.to_a, 'id', 'name', current_filter)
%p
  - current_filter = @settings.fetch('issue_status_in_stop_id', 0)
  %label{for: 'settings_issue_status_in_stop_id'}= t('label_issue_status_in_stop')
  = select_tag 'settings[issue_status_in_stop_id]', options_from_collection_for_select(IssueStatus.sorted.to_a, 'id', 'name', current_filter)

%p
  %label{for: 'settings_ldap_use'}= t('label_ldap_use')
  = hidden_field_tag 'settings[ldap_use]', 0
  = check_box_tag 'settings[ldap_use]', 1, (@settings['ldap_use'].to_i == 1 ? true : false), :id => 'ldap_use_checkbox'